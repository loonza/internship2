<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>{{group.name}}</title>
    <link rel="stylesheet" href="/css/styles.css"/>
    <style>
        #main {
            display: flex;
            flex-direction: column;
            height: 100vh;
        }

        #header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px 24px;
            border-bottom: 1px solid #ddd;
        }

        #header h2 {
            margin: 0;
            font-size: 20px;
        }

        .breadcrumb {
            font-size: 13px;
            color: #888;
        }

        .tab-bar {
            display: flex;
            border-bottom: 1px solid #ddd;
            padding: 0 24px;
        }

        .tab {
            padding: 8px 16px;
            background: none;
            border: none;
            border-bottom: 2px solid transparent;
            cursor: pointer;
        }

        .tab.active {
            border-bottom-color: #0066cc;
            font-weight: bold;
        }

        #tab-content {
            flex: 1;
            padding: 24px;
            overflow-y: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            text-align: left;
            padding: 8px;
            border-bottom: 1px solid #ddd;
            font-weight: normal;
            color: #666;
        }

        td {
            padding: 8px;
            border-bottom: 1px solid #eee;
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 16px;
            max-width: 600px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            margin-bottom: 4px;
            color: #666;
        }

        .form-group input, .form-group textarea {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }

        .submit-button {
            padding: 8px 16px;
            background-color: #0066cc;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .submit-button:hover {
            background-color: #0052a3;
        }

        .delete-button {
            padding: 8px 16px;
            background-color: #ff4444;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .delete-button:hover {
            background-color: #cc0000;
        }

        .confirmation-dialog {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .dialog-content {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            width: 400px;
        }

        .dialog-buttons {
            display: flex;
            justify-content: flex-end;
            margin-top: 20px;
            gap: 10px;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            width: 500px;
            max-height: 80vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

        .modal-tabs {
            display: flex;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
        }

        .modal-tab {
            padding: 8px 16px;
            background: none;
            border: none;
            cursor: pointer;
            border-bottom: 2px solid transparent;
        }

        .modal-tab.active {
            border-bottom-color: #0066cc;
            font-weight: bold;
        }

        .search-container {
            margin-bottom: 15px;
        }

        .search-input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .items-list {
            max-height: 300px;
            overflow-y: auto;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-bottom: 15px;
        }

        .item-row {
            padding: 8px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }

        .item-row:hover {
            background-color: #f5f5f5;
        }

        .item-row.selected {
            background-color: #e6f2ff;
        }

        .modal-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .action-button {
            padding: 4px 8px;
            background: none;
            border: 1px solid #ddd;
            border-radius: 3px;
            cursor: pointer;
            font-size: 12px;
        }

        .action-button:hover {
            background-color: #f5f5f5;
        }
    </style>
</head>
<body>
<div id="main">
    <div id="header">
        <div>
            <div class="breadcrumb">Группы /</div>
            <h2>{{group.name}}</h2>
        </div>
        <div>
            <button id="add-button">Добавить</button>
            <input type="text" id="search-input" placeholder="Найти в списке"/>
        </div>
    </div>

    <div class="tab-bar">
        <button class="tab active" data-tab="members">СОСТАВ</button>
        <button class="tab" data-tab="props">СВОЙСТВА</button>
    </div>

    <div id="tab-content">
        <div class="tab-section" id="members-tab">
            <table>
                <thead>
                <tr>
                    <th>Тип</th>
                    <th>Название</th>
                    <th>Действия</th>
                </tr>
                </thead>
                <tbody>
                {{#each group.members}}
                    <tr>
                        <td>{{this.type}}</td>
                        <td>
                            {{#if (eq this.type 'user')}}
                                <a href="/users/{{this.id}}" style="text-decoration: none; color: inherit;">
                                    {{this.name}}
                                </a>
                            {{else}}
                                <a href="/groups/{{this.id}}" style="text-decoration: none; color: inherit;">
                                    {{this.name}}
                                </a>
                            {{/if}}
                        </td>
                        <td>
                            <button class="action-button delete-member-btn"
                                    data-type="{{this.type}}"
                                    data-id="{{this.id}}">
                                Удалить
                            </button>
                        </td>
                    </tr>
                {{else}}
                    <tr>
                        <td colspan="3">Нет участников</td>
                    </tr>
                {{/each}}
                </tbody>
            </table>
        </div>

        <div class="tab-section" id="props-tab" style="display:none;">
            <form id="group-form" class="form-grid">
                <div class="form-group">
                    <label>Источник</label>
                    <input type="text" name="source" value="{{group.source}}" readonly>
                </div>
                <div class="form-group">
                    <label>Название</label>
                    <input type="text" name="name" value="{{group.name}}" required>
                </div>
                <div class="form-group">
                    <label>Описание</label>
                    <input type="text" name="description" value="{{group.description}}">
                </div>
                <div class="form-group" style="grid-column: 1 / -1;">
                    <label>Комментарий</label>
                    <textarea name="comment">{{group.comment}}</textarea>
                </div>
                <div style="display:flex; justify-content: space-between; grid-column: 1 / -1;">
                    <button type="button" id="delete-button" class="delete-button">Удалить группу</button>
                    <button type="submit" class="submit-button">Сохранить</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="add-member-modal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Добавить участника</h3>
            <button id="close-modal" style="background: none; border: none; font-size: 18px; cursor: pointer;">×
            </button>
        </div>

        <div class="modal-tabs">
            <button class="modal-tab active" data-type="user">Пользователи</button>
            <button class="modal-tab" data-type="group">Группы</button>
        </div>

        <div class="search-container">
            <input type="text" id="member-search" class="search-input" placeholder="Поиск...">
        </div>

        <div class="items-list" id="items-list">
            <div class="item-row">Загрузка...</div>
        </div>

        <div class="modal-buttons">
            <button id="cancel-add" class="cancel-button">Отмена</button>
            <button id="confirm-add" class="submit-button">Добавить</button>
        </div>
    </div>
</div>

<div id="confirmation-dialog" class="confirmation-dialog">
    <div class="dialog-content">
        <h3>Подтверждение удаления</h3>
        <p>Вы действительно хотите удалить группу "{{group.name}}"?</p>
        <div class="dialog-buttons">
            <button id="cancel-delete" class="submit-button">Отмена</button>
            <button id="confirm-delete" class="delete-button">Удалить</button>
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('.tab').forEach(btn => {
        btn.onclick = () => {
            document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
            btn.classList.add('active');

            document.getElementById('members-tab').style.display =
                    btn.dataset.tab === 'members' ? 'block' : 'none';
            document.getElementById('props-tab').style.display =
                    btn.dataset.tab === 'props' ? 'block' : 'none';
        };
    });

    document.getElementById('group-form').addEventListener('submit', async function (e) {
        e.preventDefault();

        const formData = new FormData(this);
        const data = {
            name: formData.get('name'),
            description: formData.get('description'),
            comment: formData.get('comment')
        };

        await fetch(`/groups/{{group.id}}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });

        window.location.reload();
    });

    const deleteButton = document.getElementById('delete-button');
    const confirmationDialog = document.getElementById('confirmation-dialog');
    const cancelDelete = document.getElementById('cancel-delete');
    const confirmDelete = document.getElementById('confirm-delete');

    deleteButton.addEventListener('click', () => {
        confirmationDialog.style.display = 'flex';
    });

    cancelDelete.addEventListener('click', () => {
        confirmationDialog.style.display = 'none';
    });

    confirmDelete.addEventListener('click', async () => {
        await fetch(`/groups/{{group.id}}`, {
            method: 'DELETE'
        });
        window.location.href = '/groups';
    });


    const addButton = document.getElementById('add-button');
    const modal = document.getElementById('add-member-modal');
    const closeModal = document.getElementById('close-modal');
    const cancelAdd = document.getElementById('cancel-add');
    const confirmAdd = document.getElementById('confirm-add');
    const memberSearch = document.getElementById('member-search');
    const itemsList = document.getElementById('items-list');
    const modalTabs = document.querySelectorAll('.modal-tab');

    let currentTab = 'user';
    let selectedItem = null;

    addButton.addEventListener('click', () => {
        modal.style.display = 'flex';
        loadItems(currentTab);
    });

    closeModal.addEventListener('click', () => {
        modal.style.display = 'none';
        resetModal();
    });

    cancelAdd.addEventListener('click', () => {
        modal.style.display = 'none';
        resetModal();
    });

    modalTabs.forEach(tab => {
        tab.addEventListener('click', () => {
            modalTabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');
            currentTab = tab.dataset.type;
            loadItems(currentTab);
        });
    });

    memberSearch.addEventListener('input', () => {
        loadItems(currentTab, memberSearch.value);
    });

    confirmAdd.addEventListener('click', async () => {
        if (!selectedItem) {
            alert('Выберите участника для добавления');
            return;
        }

        try {
            const response = await fetch(`/groups/{{group.id}}/members`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    memberType: currentTab,
                    [currentTab === 'user' ? 'userId' : 'groupId']: selectedItem.id
                })
            });

            if (response.ok) {
                location.reload();
            } else {
                alert('Ошибка при добавлении участника');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Ошибка при добавлении участника');
        }
    });

    function resetModal() {
        memberSearch.value = '';
        selectedItem = null;
        itemsList.innerHTML = '<div class="item-row">Загрузка...</div>';
    }

    async function loadItems(type, search = '') {
        try {
            const endpoint = type === 'user'
                    ? `/groups/api/users${search ? `?search=${encodeURIComponent(search)}` : ''}`
                    : `/groups/api/groups/exclude/{{group.id}}${search ? `?search=${encodeURIComponent(search)}` : ''}`;

            const response = await fetch(endpoint);
            const data = await response.json();

            itemsList.innerHTML = '';

            if (data.length === 0) {
                itemsList.innerHTML = '<div class="item-row">Ничего не найдено</div>';
                return;
            }

            data.forEach(item => {
                const row = document.createElement('div');
                row.className = 'item-row';
                row.dataset.id = item.id;

                if (type === 'user') {
                    row.textContent = `${item.lastName} ${item.firstName} ${item.middleName || ''}`.trim();
                    if (item.email) {
                        row.textContent += ` (${item.email})`;
                    }
                } else {
                    row.textContent = item.name;
                    if (item.description) {
                        row.textContent += ` (${item.description})`;
                    }
                }

                row.addEventListener('click', () => {
                    document.querySelectorAll('.item-row').forEach(r => r.classList.remove('selected'));
                    row.classList.add('selected');
                    selectedItem = item;
                });

                itemsList.appendChild(row);
            });
        } catch (error) {
            console.error('Error loading items:', error);
            itemsList.innerHTML = '<div class="item-row">Ошибка загрузки</div>';
        }
    }

    document.addEventListener('click', async (e) => {
        if (e.target.classList.contains('delete-member-btn')) {
            const type = e.target.dataset.type;
            const id = e.target.dataset.id;

            if (confirm('Вы уверены, что хотите удалить этого участника?')) {
                try {
                    await fetch(`/groups/{{group.id}}/members`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            memberType: type,
                            memberId: id
                        })
                    });

                    location.reload();
                } catch (error) {
                    console.error('Error:', error);
                    alert('Ошибка при удалении участника');
                }
            }
        }
    });
</script>
</body>
</html>