<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Пользователи</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        #header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        #header h1 {
            margin: 0;
            font-size: 24px;
        }
        #header > div {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        #search-wrapper {
            position: relative;
            display: inline-block;
        }
        #search-input {
            padding: 6px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 200px;
        }
        .highlight { background-color: yellow; }
        .suggestions {
            position: absolute;
            background: white;
            border: 1px solid #ccc;
            max-height: 150px;
            overflow-y: auto;
            z-index: 1000;
            width: 200px;
        }
        .suggestion-item {
            padding: 4px 8px;
            cursor: pointer;
        }
        .suggestion-item:hover {
            background-color: #f0f0f0;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }
        th {
            text-align: left;
            padding: 8px;
            border-bottom: 1px solid #ddd;
            font-weight: normal;
            color: #666;
        }
        td {
            padding: 8px;
            border-bottom: 1px solid #eee;
        }
        .tabs {
            display: flex;
            border-bottom: 1px solid #ddd;
            margin-bottom: 0;
        }
        .tab-button {
            padding: 8px 16px;
            background: none;
            border: none;
            border-bottom: 2px solid transparent;
            cursor: pointer;
            font-size: 14px;
        }
        .tab-button.active {
            border-bottom-color: #0066cc;
            font-weight: bold;
        }
        .tab-content {
            padding: 20px;
            background: #f9f9f9;
            border-left: 1px solid #ddd;
            min-height: 200px;
        }
        .access-right-item {
            margin-bottom: 10px;
            padding: 12px;
            background: white;
            border-radius: 4px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        .access-right-item h4 {
            margin: 0 0 5px 0;
            color: #333;
        }
        .access-right-item p {
            margin: 0;
            color: #666;
            font-size: 13px;
        }
        #groups-list div {
            margin-bottom: 8px;
            padding: 8px;
            background: white;
            border-radius: 4px;
        }
        #pagination {
            display: flex;
            align-items: center;
            margin-top: 20px;
            gap: 15px;
            font-size: 14px;
        }
        #pagination a {
            color: #0066cc;
            text-decoration: none;
        }
        .user-row:hover {
            background-color: #f5f5f5;
            cursor: pointer;
        }
        .user-selected {
            background-color: #e6f2ff;
        }
        .user-name-link {
            display: block;
            text-decoration: none;
            color: inherit;
            padding: 8px;
        }
        .user-name-link:hover {
            text-decoration: underline;
        }
        #user-details-panel {
            width: 350px;
            margin-left: 30px;
            background: #f9f9f9;
            border-left: 1px solid #ddd;
        }
    </style>
</head>
<body>
<div id="main">
    <div id="header">
        <h1>Пользователи</h1>
        <div>
            <a href="/addUser"><button id="add-button">Добавить</button></a>
            <div id="search-wrapper">
                <input type="text" id="search-input" placeholder="Найти в списке" autocomplete="off" value="{{searchQuery}}">
                <div id="suggestions" class="suggestions" hidden></div>
            </div>
        </div>
    </div>

    <div style="display: flex;">
        <div id="table-wrapper" style="flex: 1;">
            <table>
                <thead>
                <tr>
                    <th>Пользователь</th>
                    <th>Логин</th>
                    <th>Комментарий</th>
                </tr>
                </thead>
                <tbody id="user-table-body">
                {{#each users}}
                    <tr class="user-row" data-user-id="{{this.id}}">
                        <td>
                            <a href="/users/{{this.id}}" class="user-name-link" onclick="event.stopPropagation()">
                                {{this.fullname}}
                            </a>
                        </td>
                        <td>{{this.login}}</td>
                        <td>{{this.comment}}</td>
                    </tr>
                {{else}}
                    <tr>
                        <td colspan="3">Пользователи не найдены</td>
                    </tr>
                {{/each}}
                </tbody>
            </table>
        </div>

        <div id="user-details-panel">
            <div class="tabs">
                <button class="tab-button active" onclick="showTab('groups')">Входит в группы</button>
                <button class="tab-button" onclick="showTab('access-rights')">Права доступа</button>
            </div>

            <div id="groups-tab" class="tab-content">
                <h3>Входит в группы</h3>
                <div id="groups-list">
                    Выберите пользователя для просмотра групп
                </div>
            </div>

            <div id="access-rights-tab" class="tab-content" style="display: none;">
                <h3>Права доступа</h3>
                <div id="access-rights-list">
                    Выберите пользователя для просмотра прав доступа
                </div>
            </div>
        </div>
    </div>

    <div id="pagination">
        {{#if (gt currentPage 1)}}
            <a href="?page={{subtract currentPage 1}}&perPage={{perPage}}{{#if searchQuery}}&search={{searchQuery}}{{/if}}">&lt; Предыдущая</a>
        {{/if}}
        <span>Страница {{currentPage}} из {{totalPages}}</span>
        {{#if (lt currentPage totalPages)}}
            <a href="?page={{add currentPage 1}}&perPage={{perPage}}{{#if searchQuery}}&search={{searchQuery}}{{/if}}">Следующая &gt;</a>
        {{/if}}
        <span>На странице:</span>
        <select id="per-page-select" onchange="changePerPage(this.value)">
            <option value="10" {{#eq perPage 10}}selected{{/eq}}>10</option>
            <option value="25" {{#eq perPage 25}}selected{{/eq}}>25</option>
            <option value="50" {{#eq perPage 50}}selected{{/eq}}>50</option>
        </select>
    </div>
</div>

<script>
    const users = {{{json users}}};

    const searchInput = document.getElementById('search-input');
    const tableBody = document.getElementById('user-table-body');
    const suggestions = document.getElementById('suggestions');

    function highlight(text, keyword) {
        const regex = new RegExp(`(${keyword})`, 'gi');
        return text.replace(regex, '<span class="highlight">$1</span>');
    }

    function renderTable(filteredUsers, keyword = '') {
        if (filteredUsers.length === 0) {
            tableBody.innerHTML = `<tr><td colspan="3">По запросу «${keyword}» ничего не найдено.<br><small>Попробуйте сократить запрос или задать его по-другому.</small></td></tr>`;
            return;
        }
        tableBody.innerHTML = filteredUsers.map(u => `
            <tr class="user-row" data-user-id="${u.id}">
                <td>
                    <a href="/users/${u.id}" class="user-name-link" onclick="event.stopPropagation()">
                        ${keyword ? highlight(u.fullname, keyword) : u.fullname}
                    </a>
                </td>
                <td>${u.login}</td>
                <td>${u.comment}</td>
            </tr>
        `).join('');

        document.querySelectorAll('.user-row').forEach(row => {
            row.addEventListener('click', function(e) {
                if (!e.target.closest('.user-name-link')) {
                    const userId = this.getAttribute('data-user-id');
                    showUserDetails(userId, this);
                }
            });
        });
    }

    function filterUsers(query) {
        return users.filter(u =>
                u.fullname.toLowerCase().includes(query.toLowerCase()) ||
                u.login.toLowerCase().includes(query.toLowerCase())
        );
    }

    searchInput.addEventListener('input', () => {
        const query = searchInput.value.trim();
        const matches = filterUsers(query);
        renderTable(matches, query);

        if (query.length > 0) {
            suggestions.innerHTML = matches.map(u =>
                    `<div class="suggestion-item" onclick="selectSuggestion('${u.fullname}')">
                    ${highlight(u.fullname, query)} (${u.login})
                </div>`
            ).join('');
            suggestions.hidden = matches.length === 0;
        } else {
            suggestions.hidden = true;
            renderTable(users);
        }
    });

    function selectSuggestion(fullname) {
        const user = users.find(u => u.fullname === fullname);
        if (user) {
            searchInput.value = fullname;
            suggestions.hidden = true;
            renderTable([user]);
            const row = document.querySelector(`[data-user-id="${user.id}"]`);
            if (row) {
                row.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                document.querySelectorAll('.user-row').forEach(r => r.classList.remove('user-selected'));
                row.classList.add('user-selected');
                showUserDetails(user.id, row);
            }
        }
    }

    document.addEventListener('click', e => {
        if (!e.target.closest('#search-wrapper')) suggestions.hidden = true;
    });

    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            const url = new URL(window.location.href);
            url.searchParams.set('search', this.value);
            url.searchParams.set('page', '1');
            window.location.href = url.toString();
        }
    });

    async function showUserDetails(userId, rowElement) {
        document.querySelectorAll('.user-row').forEach(row => {
            row.classList.remove('user-selected');
        });
        rowElement.classList.add('user-selected');

        try {
            document.getElementById('groups-list').innerHTML = 'Загрузка...';
            document.getElementById('access-rights-list').innerHTML = 'Загрузка...';

            const [groupsResponse, accessRightsResponse] = await Promise.all([
                fetch(`/users/${userId}/groups`),
                fetch(`/users/${userId}/access-rights`)
            ]);

            const groups = await groupsResponse.json();
            const accessRights = await accessRightsResponse.json();

            updateGroupsTab(groups);
            updateAccessRightsTab(accessRights);
        } catch (error) {
            console.error('Error loading data:', error);
            document.getElementById('groups-list').innerHTML =
                    '<div style="color: red;">Ошибка загрузки данных</div>';
            document.getElementById('access-rights-list').innerHTML =
                    '<div style="color: red;">Ошибка загрузки данных</div>';
        }
    }

    function updateGroupsTab(groups) {
        const groupsList = document.getElementById('groups-list');
        if (groups && groups.length > 0) {
            groupsList.innerHTML = groups.map(group =>
                    `<div>${group}</div>`
            ).join('');
        } else {
            groupsList.innerHTML = '<div>Пользователь не состоит в группах</div>';
        }
    }

    function updateAccessRightsTab(accessRights) {
        const accessRightsList = document.getElementById('access-rights-list');
        if (accessRights && accessRights.length > 0) {
            accessRightsList.innerHTML = accessRights.map(right => `
                <div class="access-right-item">
                    <h4>${right.resourceName}</h4>
                    <p>Сервис: ${right.serviceName}</p>
                    <p>Тип доступа: ${right.accessType}</p>
                    <p>Право: ${right.permission}</p>
                </div>
            `).join('');
        } else {
            accessRightsList.innerHTML = '<div>Нет прав доступа</div>';
        }
    }

    function showTab(tabName) {
        document.querySelectorAll('.tab-button').forEach(btn => {
            btn.classList.remove('active');
        });
        document.querySelectorAll('.tab-content').forEach(tab => {
            tab.style.display = 'none';
        });

        document.querySelector(`.tab-button[onclick="showTab('${tabName}')"]`).classList.add('active');
        document.getElementById(`${tabName}-tab`).style.display = 'block';
    }

    function changePerPage(perPage) {
        const url = new URL(window.location.href);
        url.searchParams.set('perPage', perPage);
        url.searchParams.set('page', '1');
        window.location.href = url.toString();
    }

    document.addEventListener('DOMContentLoaded', () => {
        renderTable(users);
    });
</script>
</body>
</html>