<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8" />
    <title>Группы</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        #main {
            display: flex;
            flex-direction: column;
            min-height: calc(100vh - 40px);
        }

        #header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        #header h1 {
            margin: 0;
            font-size: 24px;
        }
        #header > div {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        #search-wrapper {
            position: relative;
            display: inline-block;
        }
        #search-input {
            padding: 6px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 200px;
        }
        .highlight {
            background-color: yellow;
        }
        .suggestions {
            position: absolute;
            background: white;
            border: 1px solid #ccc;
            max-height: 150px;
            overflow-y: auto;
            z-index: 1000;
            width: 200px;
        }
        .suggestion-item {
            padding: 4px 8px;
            cursor: pointer;
        }
        .suggestion-item:hover {
            background-color: #f0f0f0;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }
        th {
            text-align: left;
            padding: 8px;
            border-bottom: 1px solid #ddd;
            font-weight: normal;
            color: #666;
        }
        td {
            padding: 8px;
            border-bottom: 1px solid #eee;
        }
        .group-detail-panel {
            margin-left: 30px;
            padding: 20px;
            background: #f9f9f9;
            border-left: 1px solid #ddd;
            width: 300px;
            flex-shrink: 0;
        }
        .group-detail-panel h3 {
            margin-top: 0;
            color: #666;
            font-size: 16px;
        }
        #group-members div {
            margin-bottom: 8px;
        }
        #pagination {
            display: flex;
            align-items: center;
            margin-top: 20px;
            gap: 15px;
            font-size: 14px;
            padding: 10px 0;
        }
        #pagination a {
            color: #0066cc;
            text-decoration: none;
        }
        .group-row:hover {
            background-color: #f5f5f5;
            cursor: pointer;
        }
        .group-selected {
            background-color: #e6f2ff;
        }
        .group-name-link {
            display: block;
            text-decoration: none;
            color: inherit;
            padding: 8px;
        }
        .group-name-link:hover {
            text-decoration: underline;
        }
        .content-wrapper {
            display: flex;
            flex: 1;
            min-height: 0;
        }
        #table-wrapper {
            flex: 1;
            overflow-y: auto;
            padding: 0 24px;
        }
    </style>
</head>
<body>
<div id="main">
    <div id="header">
        <h1>Группы</h1>
        <div>
            <a href="/groups/add"><button id="add-button">Добавить</button></a>
            <div id="search-wrapper">
                <input type="text" id="search-input" placeholder="Найти в списке" autocomplete="off" value="{{searchQuery}}">
                <div id="suggestions" class="suggestions" hidden></div>
            </div>
        </div>
    </div>

    <div class="content-wrapper">
        <div id="table-wrapper">
            <table>
                <thead>
                <tr>
                    <th>Название</th>
                    <th>Описание</th>
                    <th>Источник авторизации</th>
                </tr>
                </thead>
                <tbody id="group-table-body">
                {{#each groups}}
                    <tr class="group-row" data-group-id="{{this.id}}">
                        <td>
                            <a href="/groups/{{this.id}}" class="group-name-link" onclick="event.stopPropagation()">
                                {{this.name}}
                            </a>
                        </td>
                        <td>{{this.description}}</td>
                        <td>{{this.source}}</td>
                    </tr>
                {{else}}
                    <tr>
                        <td colspan="3">Группы не найдены</td>
                    </tr>
                {{/each}}
                </tbody>
            </table>
        </div>

        <div id="group-detail-panel" class="group-detail-panel">
            <h3>Состав группы</h3>
            <div id="group-members">
                {{#if selectedGroup}}
                    {{#each selectedGroup.members}}
                        <div class="member-item">{{this}}</div>
                    {{else}}
                        <div>Нет участников</div>
                    {{/each}}
                {{else}}
                    <div>Выберите группу из списка слева</div>
                {{/if}}
            </div>
        </div>
    </div>

    <div id="pagination">
        {{#if (gt currentPage 1)}}
            <a href="?page={{subtract currentPage 1}}&perPage={{perPage}}{{#if searchQuery}}&search={{searchQuery}}{{/if}}">&lt; Предыдущая</a>
        {{/if}}
        <span>Страница {{currentPage}} из {{totalPages}}</span>
        {{#if (lt currentPage totalPages)}}
            <a href="?page={{add currentPage 1}}&perPage={{perPage}}{{#if searchQuery}}&search={{searchQuery}}{{/if}}">Следующая &gt;</a>
        {{/if}}
        <span>На странице:</span>
        <select id="per-page-select" onchange="changePerPage(this.value)">
            <option value="5" {{#eq perPage 5}}selected{{/eq}}>5</option>
        </select>
    </div>
</div>

<script>
    const groups = {{{json groups}}};

    function highlight(text, keyword) {
        const regex = new RegExp(`(${keyword})`, 'gi');
        return text.replace(regex, '<span class="highlight">$1</span>');
    }

    function renderTable(filteredGroups, keyword = '') {
        const tableBody = document.getElementById('group-table-body');

        if (filteredGroups.length === 0) {
            tableBody.innerHTML = `<tr><td colspan="3">По запросу «${keyword}» ничего не найдено.<br><small>Попробуйте сократить запрос или задать его по-другому.</small></td></tr>`;
            return;
        }

        tableBody.innerHTML = filteredGroups.map(g => `
            <tr class="group-row" data-group-id="${g.id}">
                <td>
                    <a href="/groups/${g.id}" class="group-name-link" onclick="event.stopPropagation()">
                        ${keyword ? highlight(g.name, keyword) : g.name}
                    </a>
                </td>
                <td>${g.description}</td>
                <td>${g.source}</td>
            </tr>
        `).join('');


        document.querySelectorAll('.group-row').forEach(row => {
            row.addEventListener('click', function(e) {
                if (!e.target.closest('.group-name-link')) {
                    const groupId = this.getAttribute('data-group-id');
                    showGroupMembers(groupId, this);
                }
            });
        });
    }

    function filterGroups(query) {
        const allGroups = JSON.parse('{{{jsonGroups}}}');
        return allGroups.filter(g =>
                g.name.toLowerCase().includes(query.toLowerCase()) ||
                (g.description && g.description.toLowerCase().includes(query.toLowerCase()))
        );
    }

    const searchInput = document.getElementById('search-input');
    const suggestions = document.getElementById('suggestions');

    searchInput.addEventListener('input', () => {
        const query = searchInput.value.trim();
        const matches = filterGroups(query);
        renderTable(matches, query);

        if (query.length > 0) {
            suggestions.innerHTML = matches.map(g =>
                    `<div class="suggestion-item" onclick="selectSuggestion('${g.name}')">
                    ${highlight(g.name, query)}
                </div>`
            ).join('');
            suggestions.hidden = matches.length === 0;
        } else {
            suggestions.hidden = true;
            renderTable(groups);
        }
    });

    function selectSuggestion(name) {
        const group = groups.find(g => g.name === name);
        if (group) {
            searchInput.value = name;
            suggestions.hidden = true;
            renderTable([group]);
            const row = document.querySelector(`[data-group-id="${group.id}"]`);
            if (row) {
                row.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                document.querySelectorAll('.group-row').forEach(r => r.classList.remove('group-selected'));
                row.classList.add('group-selected');
                showGroupMembers(group.id, row);
            }
        }
    }

    document.addEventListener('click', e => {
        if (!e.target.closest('#search-wrapper')) {
            suggestions.hidden = true;
        }
    });

    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            const url = new URL(window.location.href);
            url.searchParams.set('search', this.value);
            url.searchParams.set('page', '1');
            window.location.href = url.toString();
        }
    });

    async function showGroupMembers(groupId, rowElement) {
        document.querySelectorAll('.group-row').forEach(row => {
            row.classList.remove('group-selected');
        });
        rowElement.classList.add('group-selected');

        try {
            document.getElementById('group-members').innerHTML = 'Загрузка...';

            const response = await fetch(`/groups/${groupId}/members`);
            const members = await response.json();

            const membersContainer = document.getElementById('group-members');
            if (members.length > 0) {
                membersContainer.innerHTML = members.map(m =>
                        `<div class="member-item">${m}</div>`
                ).join('');
            } else {
                membersContainer.innerHTML = '<div>Нет участников</div>';
            }
        } catch (error) {
            console.error('Error loading members:', error);
            document.getElementById('group-members').innerHTML =
                    '<div style="color: red;">Ошибка загрузки состава группы</div>';
        }
    }

    function changePerPage(perPage) {
        const url = new URL(window.location.href);
        url.searchParams.set('perPage', perPage);
        url.searchParams.set('page', '1');
        window.location.href = url.toString();
    }


    document.addEventListener('DOMContentLoaded', () => {
        renderTable(groups);
        {{#if searchQuery}}
            searchInput.value = '{{searchQuery}}';
            const matches = filterGroups('{{searchQuery}}');
            renderTable(matches, '{{searchQuery}}');
        {{/if}}
    });
</script>
</body>
</html>